# .github/workflows/test-and-report.yml

name: Test & Report

on:
  push: {}
  pull_request: {}
  workflow_dispatch: {}

jobs:
  test:
    name: Run ${{ matrix.flow }} / ${{ matrix.test_type }} tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flow: [consumer, provider]       # add 'provider' when ready
        test_type: [smoke]      # add other types when needed

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-json-report python-dotenv

      - name: Create .env file
        env:
          BASE_URL:       ${{ secrets.BASE_URL }}
          TEST_EMAIL:     ${{ secrets.EMAIL }}
          TEST_PASSWORD:  ${{ secrets.PASSWORD }}
          HOME_URL_DEV:   ${{ secrets.HOME_URL_DEV }}
        run: |
          cat <<EOF > .env
          BASE_URL=${BASE_URL}
          TEST_EMAIL=${TEST_EMAIL}
          TEST_PASSWORD=${TEST_PASSWORD}
          EOF

      - name: 'Debug: show workspace'
        run: |
          pwd
          ls -R .

      - name: Run pytest for ${{ matrix.flow }} / ${{ matrix.test_type }}
        # ensure your pages/ package is on PYTHONPATH
        env:
          BASE_URL:       ${{ secrets.BASE_URL }}
          TEST_EMAIL:     ${{ secrets.EMAIL }}
          TEST_PASSWORD:  ${{ secrets.PASSWORD }}
          PYTHONPATH:     ${{ github.workspace }}
        run: |
          set +e
          pytest tests/${{ matrix.flow }}/${{ matrix.test_type }} \
            --json-report --json-report-file=report-${{ matrix.flow }}-${{ matrix.test_type }}.json \
            -m smoke -q     # adjust markers/flags as you like
          echo "exit_code=$?" >> $GITHUB_OUTPUT
          set -e

      - name: Upload JSON report artifact
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.flow }}-${{ matrix.test_type }}
          path: report-${{ matrix.flow }}-${{ matrix.test_type }}.json

  coverage:
    name: Coverage & Summary Report
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-json-report python-dotenv coverage

      - name: Create .env file
        env:
          BASE_URL:       ${{ secrets.BASE_URL }}
          TEST_EMAIL:     ${{ secrets.EMAIL }}
          TEST_PASSWORD:  ${{ secrets.PASSWORD }}
        run: |
          cat <<EOF > .env
          BASE_URL=${BASE_URL}
          TEST_EMAIL=${TEST_EMAIL}
          TEST_PASSWORD=${TEST_PASSWORD}
          EOF

      - name: Run full test suite under coverage
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set +e
          coverage run -m pytest \
            --json-report \
            --json-report-file=report.json
          echo "exit_code=$?" >> $GITHUB_OUTPUT
          set -e

      - name: Produce coverage report
        run: coverage report --fail-under=80

      - name: Generate HTML coverage report
        run: coverage html

      - name: Generate JSON & human-readable test report
        run: python report_generator.py

      - name: Upload coverage & test-report artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-and-report
          path: |
            report.json
            TEST_REPORT.md
            TEST_REPORT.pdf
            htmlcov/

      # Optional: Fail job if coverage tests failed
      - name: Fail job if tests failed
        if: steps.run_full_test_suite_under_coverage.outputs.exit_code != '0'
        run: exit 1

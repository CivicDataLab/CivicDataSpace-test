# .github/workflows/test-and-report.yml

name: Test & Report

on:
  push: {}
  pull_request: {}
  workflow_dispatch: {}

jobs:
  test:
    name: Run ${{ matrix.flow }} / ${{ matrix.test_type }} tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flow: [consumer]
#        flow: [consumer, provider]
        test_type: [smoke]
#        test_type: [smoke, functional, mobile]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-json-report python-dotenv

      - name: Create .env file
        env:
          BASE_URL:       ${{ secrets.BASE_URL }}
          TEST_EMAIL:     ${{ secrets.EMAIL }}
          TEST_PASSWORD:  ${{ secrets.PASSWORD }}
        run: |
          cat <<EOF > .env
          BASE_URL=${BASE_URL}
          TEST_EMAIL=${TEST_EMAIL}
          TEST_PASSWORD=${TEST_PASSWORD}
          EOF

      - name:
         Debug: show workspace
         run: |
          pwd
          ls -R .

      - name: Run pytest for ${{ matrix.flow }} / ${{ matrix.test_type }}
        env:
          BASE_URL:         ${{ secrets.BASE_URL }}
          TEST_EMAIL:       ${{ secrets.EMAIL }}
          TEST_PASSWORD:    ${{ secrets.PASSWORD }}
        run: |
          pytest tests/${{ matrix.flow }}/${{ matrix.test_type }} \
            --maxfail=1 --disable-warnings -vv --capture=no \
            --json-report \
            --json-report-file=report-${{ matrix.flow }}-${{ matrix.test_type }}.json

      - name: Upload JSON report artifact
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.flow }}-${{ matrix.test_type }}
          path: report-${{ matrix.flow }}-${{ matrix.test_type }}.json

  coverage:
    name: Coverage & Summary Report
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-json-report python-dotenv coverage

      - name: Create .env file
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          TEST_EMAIL: ${{ secrets.EMAIL }}
          TEST_PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          cat <<EOF > .env
          BASE_URL=${BASE_URL}
          TEST_EMAIL=${TEST_EMAIL}
          TEST_PASSWORD=${TEST_PASSWORD}
          EOF

      - name: Run full test suite under coverage
        run: |
          coverage run -m pytest

      - name: Produce coverage report
        run: |
          coverage report --fail-under=80

      - name: Generate HTML coverage report
        run: |
          coverage html

      - name: Generate JSON & human-readable test report
        run: |
          python report_generator.py

      - name: Upload coverage & test-report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-and-report
          path: |
            report.json
            TEST_REPORT.md
            TEST_REPORT.pdf
            htmlcov/
